{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yasha\\\\Desktop\\\\SUNO-FRONTEND\\\\suno\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport * as s from './Sidebar.styles';\nimport Favicon from 'react-favicon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = props => {\n  _s();\n\n  const {\n    backgroundImage = '',\n    sidebarHeader = {\n      fullName: '',\n      shortName: ''\n    },\n    menuItems = [],\n    fonts = {\n      header: '',\n      menu: ''\n    },\n    colorPalette = {\n      bgColor1: 'rgba(11, 171, 100, 0.8)',\n      bgColor2: 'rgba(59, 183, 143, 0.8)',\n      fontColor: 'rgba(22, 46, 39)',\n      fontColorSelected: 'rgba(255, 255, 255)',\n      dividerColor: 'rgba(122, 204, 178)',\n      selectedBackgroundCollapsedMode: 'dark'\n    }\n  } = props; // State\n\n  const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\n  const [isSidebarOpen, setSidebarState] = useState(true);\n  const [header, setHeader] = useState(sidebarHeader.fullName);\n  const [subMenusStates, setSubmenus] = useState({}); // Effects\n  // Set selected menu item based on URL pathname\n\n  useLayoutEffect(() => {\n    const path = window.location.pathname;\n    const parts = path.split('/');\n\n    if (path !== '/' && parts[1].charAt(0).toUpperCase() !== menuItems[0].name) {\n      const selectedItem = parts[1].charAt(0).toUpperCase() + parts[1].slice(1);\n      setSelectedMenuItem(selectedItem);\n    }\n  }, [menuItems]); // Update of header state\n\n  useEffect(() => {\n    isSidebarOpen ? setTimeout(() => setHeader(sidebarHeader.fullName), 200) : setHeader(sidebarHeader.shortName);\n  }, [isSidebarOpen, sidebarHeader]); // Update of sidebar state\n\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      if (window.innerWidth < 1280) setSidebarState(false);else setSidebarState(true);\n    };\n\n    window.addEventListener('resize', updateWindowWidth);\n    return () => window.removeEventListener('resize', updateWindowWidth);\n  }, [isSidebarOpen]); // Add index of items that contain sub menu items\n\n  useEffect(() => {\n    const newSubmenus = {};\n    menuItems.forEach((item, index) => {\n      const hasSubmenus = !!item.subMenuItems.length;\n\n      if (hasSubmenus) {\n        newSubmenus[index] = {};\n        newSubmenus[index]['isOpen'] = false;\n        newSubmenus[index]['selected'] = null;\n      }\n    }); // Set selected submenu if user landed on one\n\n    const path = window.location.pathname;\n    const parts = path.split('/');\n\n    if (parts.length === 3) {\n      var _menuItems$selectedIt;\n\n      const selectedItem = parts[1].toLowerCase();\n      const selectedSubItem = parts[2].toLowerCase();\n      const selectedItemIndex = menuItems.findIndex(item => item.name.toLowerCase() === selectedItem);\n      const selectedSubItemIndex = (_menuItems$selectedIt = menuItems[selectedItemIndex]) === null || _menuItems$selectedIt === void 0 ? void 0 : _menuItems$selectedIt.subMenuItems.findIndex(subItem => subItem.name.toLowerCase() === selectedSubItem);\n      if (selectedItemIndex !== -1) newSubmenus[selectedItemIndex]['isOpen'] = true;\n      if (selectedItemIndex !== -1 && selectedSubItemIndex !== -1) newSubmenus[selectedItemIndex]['selected'] = selectedSubItemIndex;\n    }\n\n    Object.keys(subMenusStates).length === 0 && setSubmenus(newSubmenus);\n  }, [menuItems, subMenusStates]);\n\n  const handleMenuItemClick = (name, index) => {\n    setSelectedMenuItem(name);\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\n\n    if (subMenusStates.hasOwnProperty(index)) {\n      subMenusCopy[index]['isOpen'] = !subMenusStates[index]['isOpen'];\n      setSubmenus(subMenusCopy);\n    } else {\n      for (let item in subMenusStates) {\n        subMenusCopy[item]['isOpen'] = false;\n        subMenusCopy[item]['selected'] = null;\n      }\n\n      setSubmenus(subMenusCopy);\n    }\n  };\n\n  const handleSubMenuItemClick = (menuItemIdx, subMenuItemIdx) => {\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\n    subMenusCopy[menuItemIdx]['selected'] = subMenuItemIdx;\n    setSubmenus(subMenusCopy);\n  };\n\n  const menuItemsJSX = menuItems.map((item, index) => {\n    var _subMenusStates$index;\n\n    const isItemSelected = selected === item.name;\n    const hasSubmenus = !!item.subMenuItems.length;\n    const isOpen = (_subMenusStates$index = subMenusStates[index]) === null || _subMenusStates$index === void 0 ? void 0 : _subMenusStates$index.isOpen;\n    const subMenusJSX = item.subMenuItems.map((subMenuItem, subMenuItemIndex) => {\n      var _subMenusStates$index2;\n\n      const isSubmenuItemSelected = ((_subMenusStates$index2 = subMenusStates[index]) === null || _subMenusStates$index2 === void 0 ? void 0 : _subMenusStates$index2.selected) === subMenuItemIndex;\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `${item.to}${subMenuItem.to}`,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(s.SubMenuItem, {\n          onClick: () => handleSubMenuItemClick(index, subMenuItemIndex),\n          selected: isSubmenuItemSelected,\n          colorPalette: colorPalette,\n          children: subMenuItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, subMenuItemIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(s.ItemContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: item.to,\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(s.MenuItem, {\n          font: fonts.menu,\n          selected: isItemSelected,\n          onClick: () => handleMenuItemClick(item.name, index),\n          isSidebarOpen: isSidebarOpen,\n          isOpen: isOpen,\n          colorPalette: colorPalette,\n          children: [/*#__PURE__*/_jsxDEV(s.Icon, {\n            isSidebarOpen: isSidebarOpen,\n            src: item.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(s.Text, {\n            isSidebarOpen: isSidebarOpen,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), hasSubmenus && isSidebarOpen && /*#__PURE__*/_jsxDEV(s.DropdownIcon, {\n            selected: isItemSelected,\n            isOpen: isOpen,\n            colorPalette: colorPalette\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: hasSubmenus && isOpen && /*#__PURE__*/_jsxDEV(motion.nav, {\n          initial: {\n            opacity: 0,\n            y: -15\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.35\n          },\n          exit: {\n            opacity: 0,\n            x: -30\n          },\n          children: /*#__PURE__*/_jsxDEV(s.SubMenuItemContainer, {\n            isSidebarOpen: isSidebarOpen,\n            colorPalette: colorPalette,\n            children: subMenusJSX\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(s.SidebarContainer, {\n    backgroundImage: backgroundImage,\n    isSidebarOpen: isSidebarOpen,\n    colorPalette: colorPalette,\n    children: [/*#__PURE__*/_jsxDEV(s.SidebarHeader, {\n      font: fonts.header,\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.MenuItemContainer, {\n      children: menuItemsJSX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.TogglerContainer, {\n      onClick: () => setSidebarState(!isSidebarOpen),\n      children: /*#__PURE__*/_jsxDEV(s.Toggler, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"fYkv3JKe28Cf8L53lffA7SLWZCc=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/yasha/Desktop/SUNO-FRONTEND/suno/src/components/Sidebar/Sidebar.js"],"names":["React","useState","useEffect","useLayoutEffect","AnimatePresence","motion","Link","s","Favicon","Sidebar","props","backgroundImage","sidebarHeader","fullName","shortName","menuItems","fonts","header","menu","colorPalette","bgColor1","bgColor2","fontColor","fontColorSelected","dividerColor","selectedBackgroundCollapsedMode","selected","setSelectedMenuItem","name","isSidebarOpen","setSidebarState","setHeader","subMenusStates","setSubmenus","path","window","location","pathname","parts","split","charAt","toUpperCase","selectedItem","slice","setTimeout","updateWindowWidth","innerWidth","addEventListener","removeEventListener","newSubmenus","forEach","item","index","hasSubmenus","subMenuItems","length","toLowerCase","selectedSubItem","selectedItemIndex","findIndex","selectedSubItemIndex","subItem","Object","keys","handleMenuItemClick","subMenusCopy","JSON","parse","stringify","hasOwnProperty","handleSubMenuItemClick","menuItemIdx","subMenuItemIdx","menuItemsJSX","map","isItemSelected","isOpen","subMenusJSX","subMenuItem","subMenuItemIndex","isSubmenuItemSelected","to","textDecoration","icon","opacity","y","duration","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { Link } from 'react-router-dom';\r\nimport * as s from './Sidebar.styles';\r\nimport Favicon from 'react-favicon';\r\n\r\nconst Sidebar = props => {\r\n  const { \r\n    backgroundImage = '', \r\n    sidebarHeader = {\r\n      fullName: '',\r\n      shortName: ''\r\n    },\r\n    menuItems = [],\r\n    fonts = {\r\n      header: '',\r\n      menu: ''\r\n    },\r\n    colorPalette = {\r\n      bgColor1: 'rgba(11, 171, 100, 0.8)',\r\n      bgColor2: 'rgba(59, 183, 143, 0.8)',\r\n      fontColor: 'rgba(22, 46, 39)',\r\n      fontColorSelected: 'rgba(255, 255, 255)',\r\n      dividerColor: 'rgba(122, 204, 178)',\r\n      selectedBackgroundCollapsedMode: 'dark'\r\n    }\r\n  } = props;\r\n\r\n  // State\r\n  const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\r\n  const [isSidebarOpen, setSidebarState] = useState(true);\r\n  const [header, setHeader] = useState(sidebarHeader.fullName);\r\n  const [subMenusStates, setSubmenus] = useState({})\r\n\r\n  // Effects\r\n\r\n  // Set selected menu item based on URL pathname\r\n  useLayoutEffect(() => {\r\n    const path = window.location.pathname;\r\n    const parts = path.split('/');\r\n\r\n    if (path !== '/' && parts[1].charAt(0).toUpperCase() !== menuItems[0].name) {\r\n      const selectedItem = parts[1].charAt(0).toUpperCase() + parts[1].slice(1);\r\n      setSelectedMenuItem(selectedItem)\r\n    }\r\n  }, [menuItems])\r\n\r\n  // Update of header state\r\n  useEffect(() => {\r\n    isSidebarOpen ? setTimeout(() => setHeader(sidebarHeader.fullName), 200) : setHeader(sidebarHeader.shortName);\r\n  }, [isSidebarOpen, sidebarHeader])\r\n\r\n\r\n  // Update of sidebar state\r\n  useEffect(() => {\r\n    const updateWindowWidth = () => {\r\n      if (window.innerWidth < 1280) setSidebarState(false);\r\n      else setSidebarState(true)\r\n    }\r\n\r\n    window.addEventListener('resize', updateWindowWidth);\r\n\r\n    return () => window.removeEventListener('resize', updateWindowWidth);\r\n  }, [isSidebarOpen]);\r\n\r\n\r\n  // Add index of items that contain sub menu items\r\n  useEffect(() => {\r\n    const newSubmenus = {};\r\n\r\n    menuItems.forEach((item, index) => {\r\n      const hasSubmenus = !!item.subMenuItems.length;\r\n\r\n      if (hasSubmenus) {\r\n        newSubmenus[index] = {};\r\n        newSubmenus[index]['isOpen'] = false;\r\n        newSubmenus[index]['selected'] = null;\r\n      }\r\n    })\r\n\r\n\r\n    // Set selected submenu if user landed on one\r\n    const path = window.location.pathname;\r\n    const parts = path.split('/');\r\n\r\n    if (parts.length === 3) {\r\n      const selectedItem = parts[1].toLowerCase();\r\n      const selectedSubItem = parts[2].toLowerCase()\r\n      const selectedItemIndex = menuItems.findIndex(item => item.name.toLowerCase() === selectedItem);\r\n      const selectedSubItemIndex = menuItems[selectedItemIndex]?.subMenuItems.findIndex(subItem => subItem.name.toLowerCase() === selectedSubItem);\r\n\r\n      if (selectedItemIndex !== -1) newSubmenus[selectedItemIndex]['isOpen'] = true;\r\n      if (selectedItemIndex !== -1 && selectedSubItemIndex !== -1) newSubmenus[selectedItemIndex]['selected'] = selectedSubItemIndex;\r\n    }\r\n\r\n    Object.keys(subMenusStates).length === 0 && setSubmenus(newSubmenus);\r\n  }, [menuItems, subMenusStates]);\r\n\r\n  const handleMenuItemClick = (name, index) => {\r\n    setSelectedMenuItem(name);\r\n\r\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\r\n\r\n    if (subMenusStates.hasOwnProperty(index)) { \r\n      subMenusCopy[index]['isOpen'] = !subMenusStates[index]['isOpen'] \r\n      setSubmenus(subMenusCopy)\r\n    }\r\n    else {\r\n      for (let item in subMenusStates) {\r\n        subMenusCopy[item]['isOpen'] = false;\r\n        subMenusCopy[item]['selected'] = null\r\n      }\r\n      setSubmenus(subMenusCopy);\r\n    }\r\n  }\r\n\r\n  const handleSubMenuItemClick = (menuItemIdx, subMenuItemIdx) => {\r\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\r\n\r\n    subMenusCopy[menuItemIdx]['selected'] = subMenuItemIdx;\r\n    setSubmenus(subMenusCopy);\r\n  }\r\n\r\n\r\n  const menuItemsJSX = menuItems.map((item, index) => {\r\n    const isItemSelected = selected === item.name;\r\n\r\n    const hasSubmenus = !!item.subMenuItems.length;\r\n    const isOpen = subMenusStates[index]?.isOpen;\r\n\r\n    const subMenusJSX = item.subMenuItems.map((subMenuItem, subMenuItemIndex) => {\r\n      const isSubmenuItemSelected = subMenusStates[index]?.selected === subMenuItemIndex;\r\n\r\n      return (\r\n        <Link to={`${item.to}${subMenuItem.to}`} style={{ textDecoration: 'none' }} key={subMenuItemIndex}>\r\n          <s.SubMenuItem\r\n            onClick={() => handleSubMenuItemClick(index, subMenuItemIndex)}\r\n            selected={isSubmenuItemSelected}\r\n            colorPalette={colorPalette}\r\n          >\r\n            {subMenuItem.name}\r\n          </s.SubMenuItem>\r\n        </Link>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <s.ItemContainer key={index}>\r\n        <Link to={item.to} style={{ textDecoration: 'none' }}>\r\n          <s.MenuItem           \r\n            font={fonts.menu}\r\n            selected={isItemSelected}\r\n            onClick={() => handleMenuItemClick(item.name, index)}\r\n            isSidebarOpen={isSidebarOpen}\r\n            isOpen={isOpen}\r\n            colorPalette={colorPalette}\r\n          >\r\n            <s.Icon isSidebarOpen={isSidebarOpen} src={item.icon} />\r\n            <s.Text isSidebarOpen={isSidebarOpen}>{item.name}</s.Text>\r\n            {hasSubmenus && isSidebarOpen && (\r\n              <s.DropdownIcon selected={isItemSelected} isOpen={isOpen} colorPalette={colorPalette} />\r\n            )}\r\n          </s.MenuItem>\r\n        </Link>\r\n\r\n        {/* Display submenus if they exist  */}\r\n        <AnimatePresence>\r\n          {hasSubmenus && isOpen && (\r\n            <motion.nav \r\n              initial={{ opacity: 0, y: -15 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.35 }}\r\n              exit={{ opacity: 0, x: -30 }}\r\n            >\r\n              <s.SubMenuItemContainer isSidebarOpen={isSidebarOpen} colorPalette={colorPalette}>{subMenusJSX}</s.SubMenuItemContainer>\r\n            </motion.nav>\r\n          )}\r\n        </AnimatePresence>\r\n      </s.ItemContainer>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <s.SidebarContainer backgroundImage={backgroundImage} isSidebarOpen={isSidebarOpen} colorPalette={colorPalette}>\r\n      <s.SidebarHeader font={fonts.header}>{header}</s.SidebarHeader>\r\n      <s.MenuItemContainer>{menuItemsJSX}</s.MenuItemContainer>\r\n      <s.TogglerContainer onClick={() => setSidebarState(!isSidebarOpen)}>\r\n        <s.Toggler />\r\n      </s.TogglerContainer>\r\n    </s.SidebarContainer>\r\n  )\r\n}\r\n\r\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}